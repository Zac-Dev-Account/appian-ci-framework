/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'eclipse' // optional (to generate Eclipse project files)
	id 'idea' // optional (to generate IntelliJ IDEA project files)
}

// Set Build Variables
def baseName = "dit-appian-common-test-framework"
def appVersion = "0.1.7"
def repoUser = "$System.env.REPO_USER"
def repoPassword = "$System.env.REPO_PASSWORD"

def mavenCentralUrl = "http://mavenCentralUrl/repository/maven-central/"
def mavenReleasesUrl = "http://mavenReleaseUrl/repository/maven-releases/"

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.httpcomponents' && details.requested.name == 'httpclient' && details.requested.version.startsWith("4.5")) {
            details.useVersion '4.5.13'
            details.because 'Earlier versions of 4.5.x contain a CVE'
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    // mavenCentral()
    maven {
        url "$mavenCentralUrl"
        allowInsecureProtocol = true
    }
    maven {
        url "$mavenReleasesUrl"
        allowInsecureProtocol = true
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.slf4j:slf4j-api:1.7.35'
    
    /* appian-selenium-api jar is a thin jar, these are the dependencies loaded from mavenCentral. If your
    organization has its own repository, edit the dependencies below accordingly.*/
    implementation 'com.brsanthu:google-analytics-java:2.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.commons:commons-lang3:3.0'
    implementation 'org.json:json:20201115'
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'

    // Appian Selenium API from Nexus Repository
    implementation 'dit.appian.selenium:appian-selenium-api:21.4.4'
    testImplementation 'dit.appian.selenium:appian-selenium-api:21.4.4'
    implementation 'io.cucumber:cucumber-java:6.8.2'

    // Appian Cucumber API
    implementation 'dit.appian.cucumber:cucumber-for-appian:21.4.4'
    testImplementation 'dit.appian.cucumber:cucumber-for-appian:21.4.4'
    testImplementation 'io.cucumber:cucumber-junit:6.8.2'



	implementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation 'org.junit.vintage:junit-vintage-engine:5.8.2'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.2')
        }
    }
}

// Set up source sets
// Allow Nested Resources for Organisation
sourceSets {
    main {
        java {
            srcDir 'dit'
        }
    }

    test {
        java {
            srcDir 'dit'
        }

        resources {
            srcDirs = [
                "src/test/resources/jsonData",
                "src/test/resources/features",
                "src/test/resources"
            ]
        }
    }
}


group 'dit.appian.testing'
version "$appVersion"

jar {
    archiveBaseName = "$baseName"
    archiveVersion =  "$appVersion"
}

// Publish to Nexus
apply plugin: "maven-publish"
publishing {
    publications {
        maven(MavenPublication) {
            artifact("build/libs/"+"$baseName"+"-$version"+".jar") {
                extension 'jar'
            }
        }
    }
    repositories {
        maven {
            name 'nexus'
            url "$mavenReleasesUrl"
            credentials {
                username "$repoUser"
                password "$repoPassword"
            }
            allowInsecureProtocol = true
        }
    }
}

// Generate Java-Docs
javadoc {
    destinationDir = project.rootProject.file("javadoc")
    source = sourceSets.main.allJava
    classpath = configurations.runtimeClasspath
}